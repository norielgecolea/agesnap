name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect package manager
        id: pm
        run: |
          if [ -f npm-shrinkwrap.json ] || [ -f package-lock.json ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install=install" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: ${{ steps.pm.outputs.manager }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
            ~/.npm
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json','**/yarn.lock') }}-${{ hashFiles('**/*.{js,ts,jsx,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json','**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.pm.outputs.manager }} ${{ steps.pm.outputs.install }}

      - name: Build and export
        run: |
          ${{ steps.pm.outputs.runner }} next build
          ${{ steps.pm.outputs.runner }} next export

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
